// HLSL은 앞서 설명한 DirectX 11에서 사용하는 작은 정점 및 픽셀 셰이더 프로그램을 작성할 때 사용하는 일종의 언어 -> c언어와 유사함

// 정점 쉐이더는 반드시 float4 : SV_POSITION(레지스터)로 반환
// 정점버퍼의 정점 1개마다 호출됨

// POSITION(시멘틱 : 의미구조)
// 시맨틱 : 변수의 입력과 출력을 확인 또는 지정하거나 데이터의 출처와 역할에 대한 분명한 의미를 부여하기 위해 함수, 변수, 인수 뒤에 선택적으로 붙여 서술하는 것
// 셰이더를 작성할 때, 사용자가 임의로 설정하는 전역변수나 버텍스 셰이더, 프래그먼트 셰이더의 인풋 구조체의 변수들이 어떤 자료와 연결될지 알려주는 것이 바로 이 시맨틱이다. 

// VS는 이름으로 아무렇게나 해도됨, 헷갈리지 않게 VS(VertexShader)로 하자 

// 버텍스 쉐이더 : 정점 셰이더는 주로 정점 버퍼의 정점들을 3D공간으로 변환시켜주는 작은 프로그램입니다.
//				   정점의 정보값들을 변화시켜서 물체를 특별한 위치로 옮기거나 텍스쳐를 바꾸거나 색상을 바꾸는 등의 작업을 수행

float4 VS(float2 p: POSITION) : SV_POSITION
{
	return float4(p.x, p.y, 0.0f, 1.0f);
}